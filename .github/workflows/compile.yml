name: Build and Release CLI

on: [push]

permissions:
  contents: write  # Required for creating releases and uploading assets

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ---------- LINUX ----------
      - name: Set up build dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y build-essential make gcc

      - name: Build on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: make release
        shell: bash

      # ---------- WINDOWS ----------
      - name: Set up MSVC environment (Windows)
        if: matrix.os == 'windows-latest'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install Make (Windows)
        if: matrix.os == 'windows-latest'
        run: choco install make -y

      - name: Build on Windows
        if: matrix.os == 'windows-latest'
        run: make release
        shell: bash

      # ---------- PACKAGE ----------
      - name: Archive binaries
        run: |
          mkdir -p release
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            mv build/fbt release/fbt
          else
            mv build/fbt.exe release/fbt.exe
          fi
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-fbt
          path: release/

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: ubuntu-latest-fbt
          path: release/linux

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-latest-fbt
          path: release/windows

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: "v0.${{ github.run_number }}"
          release_name: "CLI Release v0.${{ github.run_number }}"
          body: |
            Automatic release for CLI version v0.${{ github.run_number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/linux/fbt
          asset_name: fbt
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/windows/fbt.exe
          asset_name: fbt.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
